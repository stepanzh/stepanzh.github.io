–°–µ—Ä–¥—Ü–µ —è–∑—ã–∫–∞ Julia ‚Äî –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è
##################################################

:date: 2025-05-14
:slug: julia-multiple-dispatch
:summary: –í—É-—Ö—É. –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç –ø—Ä–æ —è–∑—ã–∫ Julia, –∏ —Å—Ä–∞–∑—É –≤ —Å–µ—Ä–¥—Ü–µ... –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –ø—Ä–æ core design —Ñ–∏—á—É ‚Äî multiple dispatch. –ü—Ä–∏–º–µ—Ä—ã, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ –ø–æ–ª–æ—á–∫–∞–º! –ê –≤ –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–∏ –¥—Ä—É–∂–µ—Å–∫–∏–π –ø–æ–¥–∑–∞—Ç—ã–ª—å–Ω–∏–∫ –ü–∞–π—Ç–æ–Ω—É.
:description: –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –ø—Ä–æ core design —Ñ–∏—á—É ‚Äî multiple dispatch. –ü—Ä–∏–º–µ—Ä—ã, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ –ø–æ–ª–æ—á–∫–∞–º! –ê –≤ –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–∏ –¥—Ä—É–∂–µ—Å–∫–∏–π –ø–æ–¥–∑–∞—Ç—ã–ª—å–Ω–∏–∫ –ü–∞–π—Ç–æ–Ω—É.
:keywords: julia,multiple dispatch,—è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è,type system,—Å–∏—Å—Ç–µ–º–∞ —Ç–∏–ø–æ–≤

.. _—Ç–µ–ª–µ–≥–µ: https://t.me/stepanzh_blog/
.. _—Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å: {filename}/pages/support-me.rst


.. epigraph:: 

   –í—É-—Ö—É. –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç –ø—Ä–æ —è–∑—ã–∫ Julia, –∏ —Å—Ä–∞–∑—É –≤ —Å–µ—Ä–¥—Ü–µ...
   –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—é –ø—Ä–æ core design —Ñ–∏—á—É ‚Äî multiple dispatch.
   –ü—Ä–∏–º–µ—Ä—ã, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ –∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç.
   –ü–æ –ø–æ–ª–æ—á–∫–∞–º!
   –ê –≤ –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–∏ –¥—Ä—É–∂–µ—Å–∫–∏–π –ø–æ–¥–∑–∞—Ç—ã–ª—å–Ω–∏–∫ –ü–∞–π—Ç–æ–Ω—É.


–°–∏—Å—Ç–µ–º–∞ —Ç–∏–ø–æ–≤ –≤ Julia
---------------------

–ß—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è –≤ Julia, –Ω–∞–¥–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Å–∏—Å—Ç–µ–º–æ–π —Ç–∏–ø–æ–≤.

.. 

  –í Julia —Ç–∏–ø—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã –≤ –∏–µ—Ä–∞—Ä—Ö–∏—é —Ç–∏–ø–∞ –¥–µ—Ä–µ–≤–æ.

.. code-block:: text

  Any
  ‚îî‚îÄ Number
     ‚îú‚îÄ Complex
     ‚îÇ  ‚îú‚îÄ Complex{Int64}
     ‚îÇ  ‚îú‚îÄ Complex{Float64}
     ‚îÇ  ‚îî‚îÄ ...
     ‚îî‚îÄ Real
        ‚îú‚îÄ AbstractFloat
        ‚îÇ  ‚îú‚îÄ BigFloat
        ‚îÇ  ‚îú‚îÄ Float16
        ‚îÇ  ‚îú‚îÄ Float32
        ‚îÇ  ‚îî‚îÄ Float64
        ‚îú‚îÄ ...
        ‚îú‚îÄ Integer
        ‚îÇ  ‚îú‚îÄ Bool
        ‚îÇ  ‚îú‚îÄ Signed
        ‚îÇ  ‚îÇ  ‚îú‚îÄ BigInt
        ‚îÇ  ‚îÇ  ‚îú‚îÄ Int128
        ‚îÇ  ‚îÇ  ‚îú‚îÄ Int16
        ‚îÇ  ‚îÇ  ‚îú‚îÄ Int32
        ‚îÇ  ‚îÇ  ‚îú‚îÄ Int64
        ‚îÇ  ‚îÇ  ‚îî‚îÄ Int8
        ‚îÇ  ‚îî‚îÄ Unsigned
        ‚îÇ     ‚îú‚îÄ UInt128
        ‚îÇ     ‚îú‚îÄ UInt16
        ‚îÇ     ‚îú‚îÄ UInt32
        ‚îÇ     ‚îú‚îÄ UInt64
        ‚îÇ     ‚îî‚îÄ UInt8
        ‚îî‚îÄ Rational
           ‚îú‚îÄ Rational{Int32}
           ‚îú‚îÄ Rational{Int64}
           ‚îî‚îÄ ...

–≠—Ç–æ —á–∞—Å—Ç—å –¥–µ—Ä–µ–≤–∞ —Ç–∏–ø–æ–≤, –æ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç (–ø–æ—á—Ç–∏) –≤—Å–µ —Ç–∏–ø—ã –¥–ª—è —á–∏—Å–µ–ª ¬´–∏–∑ –∫–æ—Ä–æ–±–∫–∏¬ª.
–ù–∞–ø—Ä–∏–º–µ—Ä, —Ü–µ–ø–æ—á–∫–∞ –æ—Ç :code:`Int64` –¥–æ :code:`Any` —Ç–∞–∫–∞—è.

.. code-block:: julia-repl

  julia> Int64 <: Signed <: Integer <: Real <: Number <: Any
  true

  julia> supertypes(Int64)
  (Int64, Signed, Integer, Real, Number, Any)

–ö–æ—Ä–µ–Ω—å –¥–µ—Ä–µ–≤–∞ —ç—Ç–æ —Ç–∏–ø :code:`Any`.
–ê –≤—Å–µ —Ç–∏–ø—ã –≤ –¥–µ—Ä–µ–≤–µ –¥–µ–ª—è—Ç—Å—è –Ω–∞ –¥–≤–∞ –≤–∏–¥–∞: –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π (abstract) –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π (concrete).

–ü—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–∏–ø—ã –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä—É –∏–∑–≤–µ—Å—Ç–Ω–æ –≤—Å—ë, –≤–∫–ª—é—á–∞—è –∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –ø–∞–º—è—Ç–∏.
–° –Ω–∏–º–∏ –º–æ–∂–Ω–æ —Å—á–∏—Ç–∞—Ç—å –≤ —Ä–∞–Ω—Ç–∞–π–º–µ (runtime; –ø–æ –¥–µ—Ñ–æ–ª—Ç—É Julia –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è just-in-time).
–ò –æ–Ω–∏ —è–≤–ª—è—é—Ç—Å—è –ª–∏—Å—Ç—å—è–º–∏ –≤ –¥–µ—Ä–µ–≤–µ —Ç–∏–ø–æ–≤.

–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Ç–∏–ø—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –≤ –¥–µ—Ä–µ–≤–æ.
–û—Ç–Ω–æ—à–µ–Ω–∏–µ –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏ –≤—ã—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ ¬´—è–≤–ª—è–µ—Ç—Å—è –ø–æ–¥—Ç–∏–ø–æ–º —Ç–∞–∫–æ–≥–æ-—Ç–æ —Ç–∏–ø–∞¬ª, –Ω–æ Julia –Ω–µ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫, –∑–¥–µ—Å—å –Ω–µ—Ç –ø—Ä–∏–≤—ã—á–Ω–æ–≥–æ –¥–ª—è –û–û–ü –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è (inheritance).
–ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–ª—å–∑—è —Å–æ 100% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —á–∏—Å–µ–ª :code:`Number` –∏ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–Ω—ã–º, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—Ç–∏–ø–∞.

–û–¥–Ω–∞–∫–æ, —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –∏ –ø–æ–ª–µ–∑–Ω–æ.
–ù–∞ —ç—Ç–æ–º —Å—Ç—Ä–æ–∏—Ç—Å—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±–æ–±—â—ë–Ω–Ω–æ–π (generic) –ø–∞—Ä–∞–¥–∏–≥–º—ã.
–ö–æ–≥–¥–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –≤—ã–∑–æ–≤ —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤—Å–µ –ª–∏ –µ—Å—Ç—å, —á—Ç–æ–±—ã –µ—ë –≤—ã–ø–æ–ª–Ω–∏—Ç—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
–ï—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, —É–≤—ã, –æ—à–∏–±–∫–∞.
–ê –µ—Å–ª–∏ –≤—Å—ë –µ—Å—Ç—å, —Ç–æ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Å–æ–∑–¥–∞—ë—Ç –Ω–∞—Å—Ç–æ–ª—å–∫–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥, –Ω–∞—Å–∫–æ–ª—å–∫–æ –º–æ–∂–µ—Ç.

–î–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è
---------------

–Ø –Ω–∞—á–Ω—É —Å –ø—Ä–∏–º–µ—Ä–∞.
–í —è–∑—ã–∫–µ Julia –º–æ–∂–Ω–æ —Ç–∞–∫.

.. code-block:: julia-repl
  :linenos: table

  julia> f(x, y) = "default";

  julia> f(x::T, y::T) where {T} = "default when x and y have same type";

  julia> f(x::Int, y::Int) = "x is Int, y is Int";

  julia> f(x::Int, y::Float64) = "x is Int, y is Float64";
  
  julia> f(x, y, z) = "oh my, there are x, y and even z!";

  julia> f("a", 1)
  "default"

  julia> f("a", "b")
  "default when x and y have same type"

  julia> f(1, 2)
  "x is Int, y is Int"

  julia> f(1, 2.0)
  "x is Int, y is Float64"

  julia> f(1, 2, 3)
  "oh my, there are x, y and even z!"

–í—ã—à–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –æ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è :code:`f`.

.. code-block:: julia-repl

  julia> f
  f (generic function with 5 methods)

–ò –ø—è—Ç—å –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –Ω–µ—ë.

.. code-block:: julia-repl

  julia> methods(f)
   [1] f(x::Int64, y::Float64)
   [2] f(x::Int64, y::Int64)
   [3] f(x, y, z)
   [4] f(x::T, y::T) where T
   [5] f(x, y)

.. 

  Julia –Ω–µ –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —è–∑—ã–∫: –∑–¥–µ—Å—å *–º–µ—Ç–æ–¥—ã –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç –Ω–µ –æ–±—ä–µ–∫—Ç–∞–º, –∞ —Ñ—É–Ω–∫—Ü–∏—è–º*.

–ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è, —Ç–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç, –∫–∞–∫–∏–µ –µ—Å—Ç—å –º–µ—Ç–æ–¥—ã —É —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–º –ø–æ–¥—Ö–æ–¥–∏—Ç.
¬´–í—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–º –æ–±—Ä–∞–∑–æ–º¬ª –∑–Ω–∞—á–∏—Ç –≤—ã–±—Ä–∞—Ç—å –º–µ—Ç–æ–¥, —Ç–∏–ø—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–∏–±–æ–ª–µ–µ ¬´–±–ª–∏–∑–∫–∏¬ª –∫ —Ç–∏–ø–∞–º –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
–í —Å–ª—É—á–∞–µ –≤—ã–∑–æ–≤–∞ :code:`f(1, 2)` –ø–æ–¥—Ö–æ–¥—è—Ç —Å—Ä–∞–∑—É —Ç—Ä–∏ –º–µ—Ç–æ–¥–∞:

- :code:`f(x, y)`,
- :code:`f(x::T, y::T) where {T}`,
- :code:`f(x::Int64, y::Int64)`.

–ù–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ç–∏–ø—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (—á–∏—Å–ª–∞ 1 –∏ 2) –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫–∏ –∫ –ø–∞—Ä–µ :code:`(Int64, Int64)` (–≤–æ–æ–±—â–µ, –æ–Ω–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –Ω–∏–º–∏). 
–ö —Ç–æ–º—É, —á—Ç–æ –∑–Ω–∞—á–∏—Ç ¬´–±–ª–∏–∑–æ—Å—Ç—å¬ª —è –≤–µ—Ä–Ω—É—Å—å –ø–æ–∑–¥–Ω–µ–µ.

.. 

  –ò—Ç–∞–∫, –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.

–ê —á—Ç–æ –∑–Ω–∞—á–∏—Ç ¬´–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è¬ª (multiple dispatch)?

.. 

  –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è —ç—Ç–æ –≤–∏–¥ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–π —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–∏–ø—ã *–Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤*.

–í —Å–ª—É—á–∞–µ Julia —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–∏–ø—ã –≤—Å–µ—Ö *–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤* (positional arguments), –∞ –≤–æ—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –ø–æ –∫–ª—é—á—É (keyword arguments) –Ω–µ –∑–∞–≤–µ–∑–ª–∏.

–î–∏—Å–ø–∞—Ç—á –≤ Python
================

–í Python —Ç–æ–∂–µ –µ—Å—Ç—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è, –Ω–æ –æ–Ω–∞ –æ–¥–∏–Ω–∞—Ä–Ω–∞—è (single dispatch).
–í Python –∫–ª–∞—Å—Å —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –∏–º—ë–Ω, –∞ –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–∑–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, :code:`x + y`, —Ç–æ –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –¥–µ–ª–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ.

.. code-block:: python

   x + y
   ‚Üí x.__add__(y)
   ‚Üí type(x).__add__(x, y)

–ì–¥–µ :code:`type(x)` –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ :code:`int`, :code:`list` –∏–ª–∏ —á–µ–º —Ç–∞–º :code:`x` —è–≤–ª—è–µ—Ç—Å—è –≤ —Ä–∞–Ω—Ç–∞–π–º–µ.
–≠—Ç–æ –∏ –µ—Å—Ç—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è, –Ω–æ –ø–æ —Ç–∏–ø—É —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.
(–ï—Å–ª–∏ –≤—ã —Ä–∞–Ω—å—à–µ –Ω–µ –∑–Ω–∞–ª–∏, –∑–∞—á–µ–º –ø–∏—Å–∞—Ç—å –≤ Python –º–µ—Ç–æ–¥–∞—Ö :code:`self`, —Ç–æ —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç–µ? üòè)


–ß—Ç–æ –µ—â—ë –º–æ–∂–Ω–æ –ø–æ—á–µ—Ä–ø–Ω—É—Ç—å –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤—ã—à–µ?
==========================================

–î–µ–∫–ª–∞—Ä–∞—Ü–∏—è –Ω–µ –Ω—É–∂–Ω–∞
~~~~~~~~~~~~~~~~~~~

–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–µ–∫–ª–∞—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–∏–ø—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏.

.. code-block:: julia-repl

  julia> f(x, y) = "default";

–ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è –∑–¥–µ—Å—å –µ—Å—Ç—å, –Ω–æ –Ω–µ—è–≤–Ω–∞—è.
–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–µ–Ω —Ç–∞–∫–æ–º—É.

.. code-block:: julia-repl

  julia> f(x::Any, y::Any) = "default";

–î–∏—Å–ø–∞—Ç—á –Ω–∞ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö —Ç–∏–ø–∞—Ö
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

–ú–æ–∂–Ω–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–æ–≤—ã–≤–∞—Ç—å—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö, –Ω–æ –∏ –Ω–∞ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö —Ç–∏–ø–∞—Ö.

.. code-block:: julia-repl

   julia> f(x, y) = "default";  # f(x::Any, y::Any)

   julia> f(x::Int, y::Int) = "x is Int, y is Int";

   julia> f(x::Real, y::Real) = "x and y are real numbers";

–ß—É—Ç—å-—á—É—Ç—å –ø—Ä–æ –∫–æ–º–ø–∏–ª—è—Ü–∏—é
^^^^^^^^^^^^^^^^^^^^^^^^

–ö–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥ –≤—ã–±—Ä–∞–Ω, –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Å–æ–∑–¥–∞—ë—Ç –º–∞—à–∏–Ω–Ω—ã–π –∫–æ–¥ –¥–ª—è –Ω–µ–≥–æ.
–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∫–æ–º–ø–∏–ª—è—Ü–∏—è –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç —Ç–µ—Ö –∂–µ —Ç–∏–ø–æ–≤ –±–æ–ª—å—à–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –º–æ–∂–Ω–æ *—Å—Ä–∞–∑—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—à–∏–Ω–Ω—ã–π –∫–æ–¥*.

–ï—Å–ª–∏ –ø—Ä–∏ —ç—Ç–æ–º —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∑–Ω–∞—á–µ–Ω–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏—Ö —Ç–∏–ø–∞–º–∏), —Ç–æ –º–∞—à–∏–Ω–Ω—ã–π –∫–æ–¥ –±—É–¥–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º.
–§—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø–∏—Å–∞–Ω—ã —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è *—Å—Ç–∞–±–∏–ª—å–Ω—ã–º–∏ –ø–æ —Ç–∏–ø—É* (type stable).
–ï—Å–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–∞—è, —Ç–æ –±—ã—Å—Ç—Ä–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–∞–¥–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ –¥–æ —É—Ä–æ–≤–Ω—è Python, –ø–æ—Ç–æ–º—É —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏—è –±–æ–∫—Å—è—Ç—Å—è, –∏ –∏—Ö —Ç–∏–ø –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤ —Ä–∞–Ω—Ç–∞–π–º–µ.

–¢–∏–ø–∏—á–Ω—ã–π –ø—Ä–∏–º–µ—Ä ‚Äî –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å :code:`sqrt(x)`.
–î–ª—è –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –æ–Ω –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç float-—á–∏—Å–ª–æ.
–ê –≤–æ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –Ω—É–∂–Ω–æ –æ–±–µ—Ä–Ω—É—Ç—å –≤ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —á–∏—Å–ª–æ.
–ë—É–¥—å –∏–Ω–∞—á–µ, —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –±—ã –±—ã–ª–∞ –ø–æ—Ç–µ—Ä—è–Ω–∞, –≤–µ–¥—å —Ç–æ–≥–¥–∞ :code:`sqrt(1)` –≤–æ–∑–≤—Ä–∞—â–∞–ª –±—ã float, –∞ :code:`sqrt(-1)` ‚Äî complex, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö –∏–º–µ–µ—Ç —Ç–∏–ø :code:`Int`.

–î–∏—Å–ø–∞—Ç—á –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

–ú–µ—Ç–æ–¥—ã –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Ä–∞–∑–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∏–∑–∞—Ü–∏—è —ç—Ç–æ —É—á–∏—Ç—ã–≤–∞–µ—Ç.

.. code-block:: julia-repl

  julia> f(x, y) = "default";

  julia> f(x, y, z) = "oh my, there are x, y and even z!";

Generic programming included
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Julia –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –æ–±–æ–±—â—ë–Ω–Ω—É—é (generic) –ø–∞—Ä–∞–¥–∏–≥–º—É.

.. code-block:: julia-repl

  julia> f(x::T, y::T) where {T} = "default when x and y have same type";

–ó–¥–µ—Å—å –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ—á–∫–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å–µ–º–µ–π—Å—Ç–≤–æ –º–µ—Ç–æ–¥–æ–≤, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –∏–º–µ—é—â–∏—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π —Ç–∏–ø (–∏ –æ–Ω –Ω–∞–∑–≤–∞–Ω :code:`T`).
–¢–æ –µ—Å—Ç—å –º–µ—Ç–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è :code:`(Int, Int)`, :code:`(Float64, Float64)`, :code:`(String, String)` –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.

–ö—Å—Ç–∞—Ç–∏, —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ –≤ —Ä–∞–Ω—Ç–∞–π–º–µ —Ç–∞–∫ –∏ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.

.. code-block:: julia-repl

  julia> atruntime(x) = typeof(x);

  julia> atcompiletime(x::T) where {T} = T;

  julia> atruntime(œÄ)
  Irrational{:œÄ}

  julia> atcompiletime(œÄ)
  Irrational{:œÄ}

–ó–Ω–∞—Ç—å —Ç–∏–ø—ã –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –±—ã–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã –¥–µ—à—ë–≤–æ –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö.
–ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–∫ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –º–∞—Å—Å–∏–≤–∞ :code:`ndims(x)` –∏–ª–∏ —Ç–∏–ø –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ :code:`eltype(x)`, –ø–æ—ç—Ç–æ–º—É —á—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç—Ç–æ–º –∑–∞—à–∏—Ç–∞ –≤ —Ç–∏–ø–µ.

–ö–∞–∫ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥?
---------------------

–ü–µ—Ä–µ–π–¥—ë–º –∫ —Ç–æ–º—É, –∫–∞–∫ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ —Å—Ä–µ–¥–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö.

–ü—Ä–∏–º–µ—Ä –ø–æ–ø—Ä–æ—â–µ
==============

–ü—É—Å—Ç—å —É –Ω–∞—Å –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è —Å –æ–¥–Ω–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏.

- :code:`g(x)`
- :code:`g(x::Number)`
- :code:`g(x::Float64)`

–ï—Å–ª–∏ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞ :code:`g(1)`, —Ç–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –º–µ—Ç–æ–¥ :code:`g(::Number)`.
–õ–æ–≥–∏–∫–∞ —Å–ª–µ–¥—É—é—â–∞—è.

- –ü–æ–¥—Ö–æ–¥—è—Ç –¥–≤–∞ –º–µ—Ç–æ–¥–∞: :code:`g(::Any)` –∏ :code:`g(::Number)`.
- –¢–∏–ø :code:`Int64` –≤ –¥–µ—Ä–µ–≤–µ –±–ª–∏–∂–µ –∫ :code:`Number`, —á–µ–º –∫ :code:`Any`.
- –ü–æ—ç—Ç–æ–º—É –±–µ—Ä—ë–º –µ–≥–æ.

–ü—Ä–∏–º–µ—Ä –ø–æ—Å–ª–æ–∂–Ω–µ–µ
================

–ê —á—Ç–æ –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ?

.. code-block:: julia-repl

  julia> f(x, y) = "default";

  julia> f(x::Number, y::Number) = "Number & Number";

  julia> f(x::Int, y::Number) = "Int & Number";

  julia> f(1, "a")
  "default"

  julia> f(1, 2)
  "Int & Number"

  julia> f(1, 1.5)
  "Int & Number"

  julia> f(1.5, 1.5)
  "Number & Number"

–ó–¥–µ—Å—å —É —Ñ—É–Ω–∫—Ü–∏–∏ —Ç—Ä–∏ –º–µ—Ç–æ–¥–∞.

–° –ø–µ—Ä–≤—ã–º –≤—ã–∑–æ–≤–æ–º :code:`f(1, "a")` –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ, –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –º–µ—Ç–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–∑ —Ç—Ä—ë—Ö.

–î–ª—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å–ª—É—á–∞–µ–≤ –¥–∞–≤–∞–π—Ç–µ –æ–±—Ä–∞—Ç–∏–º—Å—è –∫ –¥–µ—Ä–µ–≤—É —Ç–∏–ø–æ–≤.
–Ø –Ω–∞–º–µ—Ä–µ–Ω–Ω–æ –æ—Å—Ç–∞–≤–∏–ª —Ç–æ–ª—å–∫–æ —Ç–µ —Ç–∏–ø—ã, –∫–æ—Ç–æ—Ä—ã–µ —É—á–∞—Å—Ç–≤—É—é—Ç –≤ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Å–ª—É—á–∞—è—Ö: :code:`Any`, :code:`Number`, :code:`Int64` (–æ–Ω –∂–µ :code:`Int`) –∏ :code:`Float64`.

.. code-block:: text

  Any
  ‚îî‚îÄ Number
     ‚îî‚îÄ Real
        ‚îú‚îÄ AbstractFloat
        ‚îÇ  ‚îî‚îÄ Float64
        ‚îî‚îÄ Integer
           ‚îî‚îÄ Signed
              ‚îî‚îÄ Int64 (—ç—Ç–æ Int –Ω–∞ –º–æ–µ–π –º–∞—à–∏–Ω–µ)

–î–ª—è –≤—ã–∑–æ–≤–∞ :code:`f(1, 2)` –ø–æ–¥—Ö–æ–¥—è—Ç –≤—Å–µ —Ç—Ä–∏ –º–µ—Ç–æ–¥–∞.
–î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ :code:`x = 1::Int` ¬´—É–¥–∞–ª—ë–Ω¬ª –æ—Ç –¥–µ–∫–ª–∞—Ä–∏—Ä—É–µ–º–æ–≥–æ —Ç–∏–ø–∞ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –≤ –∫–∞–∂–¥–æ–º –º–µ—Ç–æ–¥–µ.

- –î–ª—è –º–µ—Ç–æ–¥–∞ :code:`f(x, y)` –¥–µ–∫–ª–∞—Ä–∏—Ä—É–µ–º—ã–π —Ç–∏–ø :code:`x`-–∞ —ç—Ç–æ —Ç–∏–ø :code:`Any`.
  –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç :code:`Int64` –¥–æ :code:`Any` –≤ –¥–µ—Ä–µ–≤–µ —Ç–∏–ø–æ–≤ —Ä–∞–≤–Ω—è–µ—Ç—Å—è –ø—è—Ç–∏.
- –î–ª—è –º–µ—Ç–æ–¥–∞ :code:`f(x::Number, y::Number)` –ø–æ–¥—Å—á—ë—Ç –¥–∞—ë—Ç —á–µ—Ç—ã—Ä–µ (—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É :code:`Int64` –∏ :code:`Number`).
- –î–ª—è –º–µ—Ç–æ–¥–∞ :code:`f(x::Int, y::Number)` –ø–æ–¥—Å—á—ë—Ç –¥–∞—ë—Ç –Ω–æ–ª—å.

–ü–æ–≤—Ç–æ—Ä–∏–º —Ç–æ –∂–µ —Å–∞–º–æ–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ :code:`y`.
–ü–æ–ª—É—á–∏–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è 5, 4 –∏ 4, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.

–°–ª–æ–∂–∏–º —Ç–µ–ø–µ—Ä—å —ç—Ç–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è.

- –£ :code:`f(x, y)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`10 = 5 + 5`.
- –£ :code:`f(x::Number, y::Number)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`8 = 4 + 4`.
- –£ :code:`f(x::Int, y::Number)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`4 = 0 + 4`.

–í –∏—Ç–æ–≥–µ –ø–æ–ª—É—á–∞–µ–º, —á—Ç–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ –º–µ—Ç–æ–¥–∞ :code:`f(x::Int, y::Number)` –¥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ :code:`(1::Int, 2::Int)` —Å–∞–º–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ.
–ü–æ—ç—Ç–æ–º—É –æ–Ω –∏ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è.
–í —ç—Ç–æ–º —Å–º—ã—Å–ª–µ (—Ç–æ—á–Ω–µ–µ, –º–µ—Ç—Ä–∏–∫–µ) –æ–Ω —Å–∞–º—ã–π –±–ª–∏–∑–∫–∏–π.

–ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –¥–ª—è –≤—ã–∑–æ–≤–∞ :code:`f(1, 1.5)`, –Ω–æ —Ç–µ–ø–µ—Ä—å —Ç–∏–ø –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —ç—Ç–æ :code:`Float64`.

- –£ :code:`f(x, y)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`9 = 5 + 4`.
- –£ :code:`f(x::Number, y::Number)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`7 = 4 + 3`.
- –£ :code:`f(x::Int, y::Number)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`3 = 0 + 3`.
  –û–Ω –∏ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è.

–î–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞ :code:`f(1.5, 1.5)` –æ–±–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏–º–µ—é—Ç —Ç–∏–ø :code:`Float64`, –∏ –ø–æ–¥—Ö–æ–¥—è—Ç —Ç–æ–ª—å–∫–æ –¥–≤–∞ –º–µ—Ç–æ–¥–∞.

- –£ :code:`f(x, y)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`8 = 4 + 4`.
- –£ :code:`f(x::Number, y::Number)` —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ :math:`6 = 3 + 3`.

–ü–æ—ç—Ç–æ–º—É –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ :code:`f(x::Number, y::Number)`.

–û–±—â–∏–π —Å–ª—É—á–∞–π (–ø–æ—á—Ç–∏)
====================

–ï—Å–ª–∏ —ç—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã –æ–±–æ–±—â–∏—Ç—å, —Ç–æ –º—ã –∏–º–µ–µ–º –¥–µ–ª–æ —Å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º, —Å–æ—Å—Ç–æ—è—â–µ–º –∏–∑ —Ç–∏–ø–æ–≤.
–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–∏–ø–∞–º–∏ –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –ø–æ –¥–µ—Ä–µ–≤—É —Å —É—á—ë—Ç–æ–º —Ç–æ–≥–æ, —á—Ç–æ –º–æ–∂–Ω–æ –¥–≤–∏–≥–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –æ—Ç –ª–∏—Å—Ç—å–µ–≤ –∫ –∫–æ—Ä–Ω—é.
–ï—Å–ª–∏ –¥–æ—Å—Ç–∏—á—å –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ –∏–∑ –¥—Ä—É–≥–æ–≥–æ —Ç–∞–∫ –Ω–µ–ª—å–∑—è, —Ç–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ.
(–¢–∞–∫–∞—è –≤–æ—Ç —Ç–æ–ø–æ–ª–æ–≥–∏—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è.)

–Ø –≤—ã—Ä–∞–∂—É —ç—Ç–æ —è–∑—ã–∫–æ–º... Julia.

.. code-block:: julia-repl
  :linenos: table

  julia> function œÅ(x, y)
             indx = findfirst(==(x), supertypes(y))
             !isnothing(indx) && return indx - 1

             indy = findfirst(==(y), supertypes(x))
             !isnothing(indy) && return indy - 1

             return -1
         end
  œÅ (generic function with 1 method)

  julia> œÅ(Float64, Any)
  4

  julia> œÅ(Float64, Number)
  3

–ó–¥–µ—Å—å —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ ¬´–≥–¥–µ —Ç–∏–ø :code:`x` —Å—Ä–µ–¥–∏ —Å—É–ø–µ—Ä—Ç–∏–ø–æ–≤ –∏–≥—Ä–µ–∫–∞¬ª.
–ï—Å–ª–∏ –Ω–∞—à–ª–∏, –∑–Ω–∞—á–∏—Ç :code:`x` –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≤–µ—Ç–≤–∏ –æ—Ç :code:`y` –¥–æ :code:`Any`, —Ç–æ–≥–¥–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–∑–∏—Ü–∏—é :code:`x` –º–∏–Ω—É—Å 1, —ç—Ç–æ –∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º –æ—Ç :code:`y` –¥–æ :code:`x`.
–ê –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∏—Å–∫–∞—Ç—å :code:`y` –≤ –≤–µ—Ç–≤–∏ –æ—Ç :code:`x` –¥–æ :code:`Any`.
–ï—Å–ª–∏ –∏ —Ç–∞–∫ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º :code:`-1`, –∫–∞–∫ –ø—Ä–∏–∑–Ω–∞–∫ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏.
–ü—Ä–∏–º–µ—Ä—ã —è –ø—Ä–∏–≤—ë–ª —Ç–µ, —á—Ç–æ —Å—á–∏—Ç–∞–ª –≤—Ä—É—á–Ω—É—é –¥–ª—è :code:`f(1.5, 1.5)`.

–° –æ–¥–Ω–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —Ä–∞–∑–æ–±—Ä–∞–ª–∏—Å—å, —Ä–∞–∑–±–µ—Ä—ë–º—Å—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏.
–ù–µ—Å–∫–æ–ª—å–∫–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —è –±—É–¥—É –ø–æ–¥–∞–≤–∞—Ç—å –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–µ–π (tuple).

.. code-block:: julia-repl
  :linenos: table

  julia> function œÅ(x::Tuple, y::Tuple)
             length(x) != length(y) && return -1

             dists = œÅ.(x, y)

             -1 in dists && return -1

             return sum(dists)
         end
  œÅ (generic function with 2 methods)

  julia> œÅ((Any, Any), (Int, Int))
  10

  julia> œÅ((Number, Number), (Int, Int))
  8

  julia> œÅ((Int, Number), (Int, Int))
  4

- –°—Ç—Ä–æ–∫–∞ 2 –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π –≤–æ–æ–±—â–µ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤.
  –≠—Ç–æ –∫–æ–≥–¥–∞ –≤ –º–µ—Ç–æ–¥–µ –∏ –≤—ã–∑–æ–≤–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —á–∏—Å–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
- –°—Ç—Ä–æ–∫–∞ 4 —Å—á–∏—Ç–∞–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.
  –¢—É—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `broadcast <https://docs.julialang.org/en/v1/manual/arrays/#Broadcasting>`_.
- –í —Å—Ç—Ä–æ–∫–µ 6 –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç ¬´–µ—Å–ª–∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –∫–∞–∫–∏–º–∏-—Ç–æ —Ç–∏–ø–∞–º–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ, —Ç–æ –∏ –≤—Å—ë —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ¬ª.
- –í —Å—Ç—Ä–æ–∫–µ 8 —Ñ–æ—Ä–º—É–ª–∞ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –Ω–µ–±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Å–ª—É—á–∞—è.
  –í –∏—Ç–æ–≥–µ –æ–Ω–∞ –ø–æ—Ö–æ–∂–∞ –Ω–∞ 1-–Ω–æ—Ä–º—É :math:`\sum |x_{i} - y_{i}|`.
- –í —Å—Ç—Ä–æ–∫–∞—Ö 12, 15 –∏ 18 —Ç–æ, —á—Ç–æ –º—ã —Å—á–∏—Ç–∞–ª–∏ –≤—Ä—É—á–Ω—É—é –¥–ª—è :code:`f(1, 2)`.

–í–æ—Ç —Ç–∞–∫ –≤–æ—Ç –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è ¬´–±–ª–∏–∑–æ—Å—Ç—å¬ª —Ç–∏–ø–æ–≤.
–ê —Ç–æ—á–Ω–µ–µ, –±–ª–∏–∑–æ—Å—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –≤—ã–∑–æ–≤–∞ –∫ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ –º–µ—Ç–æ–¥–∞.

–ü–æ–¥—ã—Ç–æ–∂–∏–º
---------

–í—ã–±–æ—Ä –º–µ—Ç–æ–¥–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ä–µ–≤–∞ —Ç–∏–ø–æ–≤.
–î–∏—Å–ø–µ—Ç—á–µ—Ä –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á–∏—Å–ª–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤, –∏ –µ—Å–ª–∏ –æ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ, —Ç–æ –∏—â–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –º–µ—Ç–æ–¥—ã.
–ï—Å–ª–∏ —Ç–∞–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Ç–æ—Ç, —á—å—è —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ –±–ª–∏–∂–µ –∫ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ –≤—ã–∑–æ–≤–∞.
–ë–ª–∏–∑–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º –º–µ–∂–¥—É —Ç–∏–ø–∞–º–∏ –≤ –¥–µ—Ä–µ–≤–µ.

–ó–∞ –∫–∞–¥—Ä–æ–º –æ—Å—Ç–∞—ë—Ç—Å—è –º–Ω–æ–≥–æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π.
–Ø –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —è–∑—ã–∫–∞ Julia –∏ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –æ–Ω–∏ –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã.
–ù–∞ –º–æ–µ–π –ø—Ä–∞–∫—Ç–∏–∫–µ —Ç–µ –ø—Ä–∏–º–µ—Ä—ã –∏ —ç–≤—Ä–∏—Å—Ç–∏–∫–∏, —á—Ç–æ —è –ø—Ä–∏–≤—ë–ª, –ø–æ–∫—Ä—ã–≤–∞—é—Ç 80% —Ä–∞–±–æ—Ç—ã –ø—Ä–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –∫–æ–¥–∞ –Ω–∞ Julia.
–í –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è 20% —Ç–æ, —Å —á–µ–º —è –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞–ª—Å—è, —Ç–æ, —á—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–º —Å –æ–ø—ã—Ç–æ–º, –∏ —Ç–æ, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –≥—É–≥–ª–∏—Ç—å (–æ–±—ã—á–Ω–æ –Ω–∞ `—Ñ–æ—Ä—É–º–µ <https://discourse.julialang.org>`_, –∫–æ–º–º—É–Ω–∏—Ç–∏ —Å—É–ø–µ—Ä).

–ï—Å–ª–∏ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –∫–∞–Ω–∞–ª—É –≤ `—Ç–µ–ª–µ–≥–µ`_.
–ê –µ—â—ë –º–æ–∂–µ—Ç–µ `—Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å`_ –≤—ã–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ Julia –∏–ª–∏ –≤–æ–æ–±—â–µ.

–ù–∞–ø–æ—Å–ª–µ–¥–æ–∫ —è –æ—Å—Ç–∞–≤–ª—é –ø—Ä–∏–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ª—é–±–ª—é.

----

P.S. –ü—Ä–∏–º–µ—Ä –æ–±–æ–±—â—ë–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Julia
------------------------------------------------

–í Julia –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –ø–∏—Å–∞—Ç—å generic –∫–æ–¥.
–ù–∞–ø—Ä–∏–º–µ—Ä, —Å–∞–º–æ–ø–∏—Å–Ω—ã–π generic —Å—É–º–º–∞—Ç–æ—Ä –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫.

.. code-block:: julia-repl

  julia> function mysum(x)
             acc = zero(eltype(x))
             for xi in x
                 acc += xi
             end
             return acc
         end;

  julia> mysum([1, 2, 3])
  6

  julia> mysum(1:10)
  55

–ö–ª—ë–≤–æ, –¥–∞?
–ü–µ—Ä–≤—ã–π –ø—Ä–∏–º–µ—Ä –¥–ª—è –º–∞—Å—Å–∏–≤–∞ –∏–∑ —Ç—Ä—ë—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
–ê –≤–æ –≤—Ç–æ—Ä–æ–º :code:`1:10` —ç—Ç–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∏—è –æ—Ç 1 –¥–æ 10 —Å –µ–¥–∏–Ω–∏—á–Ω—ã–º —à–∞–≥–æ–º.

–¢–∞–∫, —Å—Ç–æ–ø.
–ê –∑–∞—á–µ–º –Ω–∞–º —Å—É–º–º–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å—É–º–º—É –∑–∞ :math:`O(1)` —Ç–∞–∫

.. math::

   \frac{(x_{1} + x_{n}) \times n}{2}

–ò—Å–ø—Ä–∞–≤–ª—è–µ–º!

.. code-block:: julia-repl

  julia> mysum(x::AbstractRange{<:Number}) = (first(x) + last(x)) * length(x) / 2;

  julia> mysum(1:10)
  55.0

–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ, –Ω–æ –µ—Å—Ç—å –∫–æ—Å—è–∫ ‚Äî —Å—É–º–º–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª —ç—Ç–æ –≤—Å–µ–≥–¥–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –Ω–µ –¥—Ä–æ–±–Ω–æ–µ.
–ò—Å–ø—Ä–∞–≤–∏–º, –Ω–∞–∫–∏–Ω—É–≤ –µ—â—ë –æ–¥–∏–Ω –º–µ—Ç–æ–¥!

.. code-block:: julia-repl

  julia> mysum(x::AbstractRange{<:Integer}) = (first(x) + last(x)) * length(x) √∑ 2;

  julia> mysum(1:10)
  55

–í–æ—Ç —Ç–µ–ø–µ—Ä—å —Ö–æ—Ä–æ—à–æ.
–í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ –Ω–∞–∫–∏–Ω—É—Ç—å –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã—Ö –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π: –Ω–∞–∫–∏–¥–∞—Ç—å –ø–æ—Ç–æ–∫–æ–≤ –∏ `SIMD <https://en.wikipedia.org/wiki/Single_instruction,_multiple_data>`_ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π (–µ—Å–ª–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –Ω–µ —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ –∑–∞ –Ω–∞—Å), –Ω–æ —â–∞—Å –Ω–µ –æ–± —ç—Ç–æ–º.

–ò—Ç–æ–≥–æ, —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞, –∫–∞–∫ –µ–π –∏ –ø–æ–ª–æ–∂–µ–Ω–æ, —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞ :math:`O(n)`, –∞ —Å—É–º–º–∞ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–∏ –∑–∞ :math:`O(1)`.

.. code-block:: julia-repl

  julia> using BenchmarkTools

  julia> @btime mysum(1:10^6);
    0.791 ns (0 allocations: 0 bytes)

  julia> @btime mysum(1:10^8);
    0.791 ns (0 allocations: 0 bytes)

–ê Python —Ç–∞–∫ –º–æ–∂–µ—Ç?
===================

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç.
–í Python –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç magick –º–µ—Ç–æ–¥ :code:`__sum__`.

.. code-block:: ipython

  In [1]: %timeit sum(range(1, 10**6 + 1))
  9.52 ms ¬± 36.5 Œºs per loop (mean ¬± std. dev. of 7 runs, 100 loops each)

  In [2]: %timeit sum(range(1, 10**8 + 1))
  951 ms ¬± 1.51 ms per loop (mean ¬± std. dev. of 7 runs, 1 loop each)

–ü–ª–∞–∫-–ø–ª–∞–∫.
–ù–æ –æ–Ω–æ –º–æ–∂–µ—Ç –ü–∞–π—Ç–æ–Ω—É –∏ –Ω–µ –Ω–∞–¥–æ.

–ù–∞ —ç—Ç–æ–º –ø–æ—Å–ª–µ—Å–ª–æ–≤–∏–µ –≤—Å—ë.
